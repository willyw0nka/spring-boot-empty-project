<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.4</version>
        <relativePath/>
    </parent>
    <groupId>com.redacted.services</groupId>
    <artifactId>rfid-money-mapping-backend</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <springdoc-openapi-starter-webmvc-ui.version>2.3.0</springdoc-openapi-starter-webmvc-ui.version>
        <detekt.version>1.23.3</detekt.version>
        <java.version>17</java.version>
        <springmockk.version>3.1.1</springmockk.version>
        <sonar.coverage.exclusions>
            **/client/**/*,
            **/configuration/**/*,
            **/data/**/*,
            **/exception/**/*,
            **/ConstantsUtils.kt,
            **/Application.kt,
        </sonar.coverage.exclusions>
        <sonar.cpd.exclusions> <!-- Excludes from duplicate code rule-->
            **/controller/**/*
        </sonar.cpd.exclusions>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPaths>${basedir}/target/jacoco.exec</sonar.jacoco.reportPaths>
        <sonar.language>kotlin</sonar.language>
        <sonar.kotlin.detekt.reportPaths>${basedir}/target/reports/detekt.xml</sonar.kotlin.detekt.reportPaths>
        <jacoco.version>0.8.10</jacoco.version>
        <sonar-maven-plugin.version>3.10.0.2594</sonar-maven-plugin.version>
        <springboot.version>${project.parent.version}</springboot.version>
        <openfeign.version>4.1.0</openfeign.version>
        <kotlin-base.version>1.9</kotlin-base.version>
        <kotlin.version>1.9.20</kotlin.version>
        <kotlin-test-junit5.version>1.9.20</kotlin-test-junit5.version>
        <easy-random-core.version>6.1.2</easy-random-core.version>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <io.mockk.version>1.13.8</io.mockk.version>
        <mng-authentication-interceptor.version>1.0.2</mng-authentication-interceptor.version>
        <mng-spring-boot-starter-error-log.version>0.0.1</mng-spring-boot-starter-error-log.version>
    </properties>


    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springboot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${springboot.version}</version>
        </dependency>

        <!-- Auth libraries -->
        <dependency>
            <groupId>com.redacted</groupId>
            <artifactId>mng-authentication-interceptor</artifactId>
            <version>${mng-authentication-interceptor.version}</version>
        </dependency>
        <dependency>
            <groupId>com.redacted.logging</groupId>
            <artifactId>mng-spring-boot-starter-error-log</artifactId>
            <version>${mng-spring-boot-starter-error-log.version}</version>
        </dependency>

        <!-- Cache libraries -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>

        <!-- Feign dependencies -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <version>${openfeign.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${springboot.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <version>${kotlin-test-junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.mockk</groupId>
            <artifactId>mockk-jvm</artifactId>
            <version>${io.mockk.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.ninja-squad</groupId>
            <artifactId>springmockk</artifactId>
            <version>${springmockk.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.dvgaba</groupId>
            <artifactId>easy-random-core-jdk11</artifactId>
            <version>${easy-random-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.dvgaba</groupId>
            <artifactId>easy-random-randomizers-jdk11</artifactId>
            <version>${easy-random-core.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- open API -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
        </dependency>

    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>
                <configuration>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <jvmTarget>${java.version}</jvmTarget>
                    <languageVersion>${kotlin-base.version}</languageVersion>
                </configuration>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>com.github.ozsie</groupId>
                <artifactId>detekt-maven-plugin</artifactId>
                <version>${detekt.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>io.gitlab.arturbosch.detekt</groupId>
                        <artifactId>detekt-formatting</artifactId>
                        <version>${detekt.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <report>
                        <report>xml:${sonar.kotlin.detekt.reportPaths}</report>
                    </report>
                    <buildUponDefaultConfig>true</buildUponDefaultConfig>
                    <parallel>true</parallel>
                    <maxIssues>9999</maxIssues>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
